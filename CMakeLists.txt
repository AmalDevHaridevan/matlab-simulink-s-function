cmake_minimum_required(VERSION 3.2)
project(matlab_simulink_s_function)
set(MATLAB_BIN_DIR "" CACHE PATH "Path to MATLAB bin directory")
if ("${MATLAB_BIN_DIR}" STREQUAL "")
    message(FATAL_ERROR "MATLAB_BIN_DIR not set, This is the directory where matlab/mex executable is located")
endif()
set(MEX_COMPILER "${MATLAB_BIN_DIR}/mex")
set(CUSTOM_COMPILE_FLAGS "")
if (WIN32)
    set(CUSTOM_COMPILE_FLAGS "${CUSTOM_COMPILE_FLAGS} /MT")
elseif(LINUX)
else()
    message(FATAL_ERROR "Unsupported OS")
endif()
################### CUSTOM PACKAGES ###################
# add more packages as required
set(CUSTOM_PACKAGES OpenCV
    ) 
foreach(PACKAGE ${CUSTOM_PACKAGES})
    find_package(${PACKAGE} REQUIRED)
endforeach()
#######################################################
################### CUSTOM SOURCE FILES (include the s_function src as well) ###################
set(SRCS ${CMAKE_SOURCE_DIR}/src/matlab_simulink_s_function.cpp ${CMAKE_SOURCE_DIR}/src/optical_flow_uav_velocity.cpp)
set(INCLUDE_DIRS "${CMAKE_SOURCE_DIR}/include")
################################################################################################
# find_package(OpenCV REQUIRED)
# include_directories(${OpenCV_INCLUDE_DIRS})
# link_libraries(${OpenCV_LIBRARIES})
set(INCLUDE_FLAGS "")
set(LIB_FLAGS "")
set(INCLUDE_FLAGS_RAW "")
set(LIB_FLAGS_RAW "")
foreach(pkgi ${CUSTOM_PACKAGES})
    foreach(dir ${${pkgi}_INCLUDE_DIRS})
        string(APPEND INCLUDE_FLAGS "-I${dir} ")
        list(APPEND INCLUDE_FLAGS_RAW "${dir} ")
    endforeach()
    foreach(lib ${${pkgi}_LIBRARIES})
        string(APPEND LIB_FLAGS "-l${lib} ")
        list(APPEND LIB_FLAGS_RAW "${lib} ")
    endforeach()
endforeach()
set(SRC_FLAGS "")
foreach(src ${SRCS})
    string(APPEND SRC_FLAGS "${src} ")
    
endforeach(src )
string(APPEND INCLUDE_FLAGS "-I${INCLUDE_DIRS} ")

# foreach(dir ${OpenCV_INCLUDE_DIRS})
#     string(APPEND INCLUDE_FLAGS "-I${dir} ")
# endforeach()
# set(CUSTOM_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/include")
# string(APPEND INCLUDE_FLAGS "-I${CUSTOM_INCLUDE_DIR} ")
# separate_arguments(FINAL_INCLUDE_FLAGS UNIX_COMMAND ${INCLUDE_FLAGS})

# set(LIB_FLAGS "")
# set(LIB_RAW "")
# foreach(lib ${OpenCV_LIBRARIES})
#     string(APPEND LIB_FLAGS "-l${lib} ")
# endforeach()
# separate_arguments(FINAL_LIB_FLAGS UNIX_COMMAND ${LIB_FLAGS})

set(BUILD_FLAGS "-v ${SRC_FLAGS} ${CUSTOM_COMPILE_FLAGS} ${INCLUDE_FLAGS} ${LIB_FLAGS}")
message(STATUS "Starting s-function compilation ${MEX_COMPILER} ${BUILD_FLAGS}") 
if (LINUX)
    execute_process(COMMAND bash -c "${MEX_COMPILER} ${BUILD_FLAGS}" WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR} RESULT_VARIABLE MEX_OUTPUT)
    if(NOT MEX_OUTPUT EQUAL "0")
            message(FATAL_ERROR "S function failed to build")
    endif()
elseif(WIN32)
    execute_process(COMMAND powershell & "${MEX_COMPILER} ${BUILD_FLAGS}" WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR} RESULT_VARIABLE MEX_OUTPUT)
    if(NOT MEX_OUTPUT EQUAL "0")
            message(FATAL_ERROR "S function failed to build")
    endif()
endif()
write_file("${CMAKE_SOURCE_DIR}/include_directories.txt" "${INCLUDE_FLAGS_RAW}")
write_file("${CMAKE_SOURCE_DIR}/link_libraries.txt" "${LIB_FLAGS_RAW}")
write_file("${CMAKE_SOURCE_DIR}/source_files.txt" "${SRC_FLAGS}")

message(STATUS "S function compilation complete")
message(STATUS "=================================IMPORTANT=============================================================")
message(STATUS "When generating code look at the two newly generated files: include_directories.txt, source_files.txt and link_libraries.txt")
message(STATUS "These files contain the include directories and link libraries that need to be included in the generated code, which can be")
message(STATUS "specified in the MATLAB code generation configuration -> custom code")
message(STATUS "=================================IMPORTANT=============================================================")