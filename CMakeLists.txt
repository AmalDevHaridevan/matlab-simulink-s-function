cmake_minimum_required(VERSION 3.2)
project(matlab_simulink_s_function)
set(MATLAB_BIN_DIR "" CACHE PATH "Path to MATLAB bin directory")
if ("${MATLAB_BIN_DIR}" STREQUAL "")
    message(FATAL_ERROR "MATLAB_BIN_DIR not set, This is the directory where matlab/mex executable is located")
endif()
set(MEX_COMPILER "${MATLAB_BIN_DIR}/mex")
set(CUSTOM_COMPILE_FLAGS "")
if (WIN32)
    set(CUSTOM_COMPILE_FLAGS "${CUSTOM_COMPILE_FLAGS} /MT")
elseif(LINUX)
else()
    message(FATAL_ERROR "Unsupported OS")
endif()
find_package(OpenCV REQUIRED)
# include_directories(${OpenCV_INCLUDE_DIRS})
# link_libraries(${OpenCV_LIBRARIES})
set(INCLUDE_FLAGS "")
foreach(dir ${OpenCV_INCLUDE_DIRS})
    string(APPEND INCLUDE_FLAGS "-I${dir} ")
endforeach()
set(CUSTOM_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/include")
string(APPEND INCLUDE_FLAGS "-I${CUSTOM_INCLUDE_DIR} ")
separate_arguments(FINAL_INCLUDE_FLAGS UNIX_COMMAND ${INCLUDE_FLAGS})

set(LIB_FLAGS "")
foreach(lib ${OpenCV_LIBRARIES})
    string(APPEND LIB_FLAGS "-l${lib} ")
endforeach()
separate_arguments(FINAL_LIB_FLAGS UNIX_COMMAND ${LIB_FLAGS})

set(BUILD_FLAGS "${CUSTOM_COMPILE_FLAGS} ${INCLUDE_FLAGS} ${LIB_FLAGS}")
message(STATUS "Starting s-function compilation ${MEX_COMPILER} -v ${CMAKE_SOURCE_DIR}/src/matlab_simulink_s_function.cpp ${CMAKE_SOURCE_DIR}/src/optical_flow_uav_velocity.cpp ${BUILD_FLAGS}") 
if (LINUX)
    execute_process(COMMAND bash -c "${MEX_COMPILER} -v ${CMAKE_SOURCE_DIR}/src/matlab_simulink_s_function.cpp ${CMAKE_SOURCE_DIR}/src/optical_flow_uav_velocity.cpp ${BUILD_FLAGS}" WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR} RESULT_VARIABLE MEX_OUTPUT)
    if(NOT MEX_OUTPUT EQUAL "0")
            message(FATAL_ERROR "S function failed to build")
    endif()
elseif(WIN32)
    execute_process(COMMAND powershell & "${MEX_COMPILER} -v ${CMAKE_SOURCE_DIR}/src/matlab_simulink_s_function.cpp ${CMAKE_SOURCE_DIR}/src/optical_flow_uav_velocity.cpp ${BUILD_FLAGS}" WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR} RESULT_VARIABLE MEX_OUTPUT)
    if(NOT MEX_OUTPUT EQUAL "0")
            message(FATAL_ERROR "S function failed to build")
    endif()
endif()